Q3_rest = quantile(Rest, 0.75),
cv_rest = sd(Rest) / mean(Rest)
)
print(result_rest)
ggplot(data, aes(x = Hgt, fill = Gender, group = Gender)) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Tinggi Badan Berdasarkan Gender",
x = "Tinggi Badan",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"),
labels = c("0", "1"))
ggplot(data, aes(x = Rest, fill = Smoke)) +
geom_histogram(binwidth = 5) +
facet_wrap(~ Gender + Exercise, ncol = 3) +
labs(title = "Distribusi Rest berdasarkan Smoke, Gender, dan Excercise",
x = "Waktu Istirahat",
y = "Frekuensi")
ggplot(data, aes(x = Hgt, fill = as.factor(Gender))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Tinggi Badan Berdasarkan Gender (0 dan 1)",
x = "Tinggi Badan (cm)",
y = "Frekuensi") +
scale_fill_discrete(values = c("yellow", "green"), labels = c("0", "1"))
ggplot(data, aes(x = Hgt, fill = as.factor(Gender))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Tinggi Badan Berdasarkan Gender (0 dan 1)",
x = "Tinggi Badan (cm)",
y = "Frekuensi") +
scale_fill_discrete(values = c("yellow", "green"), labels = c("0", "1"))
ggplot(data, aes(x = Hgt, fill = as.factor(Gender))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Tinggi Badan Berdasarkan Gender (0 dan 1)",
x = "Tinggi Badan (cm)",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"), labels = c("0", "1"))
ggplot(data, aes(x = Hgt, fill = Gender)) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Tinggi Badan Berdasarkan Gender (0 dan 1)",
x = "Tinggi Badan (cm)",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"), labels = c("0", "1"))
ggplot(data, aes(x = Wgt, fill = Gender, group = Gender)) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Berat Badan Berdasarkan Gender",
x = "Berat Badan",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"),
labels = c("0", "1"))
ggplot(data, aes(x = Rest, fill = Smoke)) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Rest berdasarkan Smoke",
x = "Rest",
y = "Frekuensi")
ggplot(data, aes(x = Rest, fill = Smoke)) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Rest berdasarkan Smoke",
x = "Rest",
y = "Frekuensi")
scale_fill_manual(values = c("yellow", "green"), labels = c("0", "1"))
ggplot(data, aes(x = Rest, fill = as.factor(Smoke))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Rest berdasarkan Smoke",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"), labels = c("0", "1"))
# Histogram untuk Rest dan Gender
ggplot(data, aes(x = Rest, fill = as.factor(Gender))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Rest berdasarkan Smoke",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"), labels = c("0", "1"))
ggplot(data, aes(x = Rest, fill = as.factor(Gender))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Rest berdasarkan Gender",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"), labels = c("0", "1"))
ggplot(data, aes(x = Rest, fill = as.factor(Smoke))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Rest berdasarkan Smoke",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"), labels = c("0", "1"))
ggplot(data, aes(x = Rest, fill = as.factor(Gender))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Rest berdasarkan Gender",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"), labels = c("0", "1"))
ggplot(data, aes(x = Rest, fill = as.factor(Exercise))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Rest berdasarkan Gender",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("red","yellow", "green"), labels = c("1", "2","3"))
ggplot(data, aes(x = Active, fill = as.factor(Smoke))) +
geom_histogram(binwidth = 5) +
labs(title = "DistribusiActive berdasarkan Smoke",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"), labels = c("0", "1"))
# Histogram untuk Rest dan Exercise
ggplot(data, aes(x = Rest, fill = as.factor(Exercise))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Rest berdasarkan Exercise",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("red","yellow", "green"),
labels = c("1", "2","3"))
# Histogram untuk Active dan Smoke
ggplot(data, aes(x = Active, fill = as.factor(Smoke))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Active berdasarkan Smoke",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"), labels = c("0", "1"))
ggplot(data, aes(x = Active, fill = as.factor(Gender))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Active berdasarkan Gender",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"),
labels = c("0", "1"))
# Histogram untuk Active dan Exercise
ggplot(data, aes(x = Rest, fill = as.factor(Exercise))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Active berdasarkan Exercise",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("red","yellow", "green"),
labels = c("1", "2","3"))
# Histogram untuk Weight dan Gender
ggplot(data, aes(x = Wgt, fill = Gender, group = Gender)) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Berat Badan Berdasarkan Gender",
x = "Berat Badan",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"),
labels = c("0", "1"))
# Histogram untuk Weight dan Gender
ggplot(data, aes(x = Wgt, fill = as.factor(Gender))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Berat Badan Berdasarkan Gender",
x = "Berat Badan",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"),
labels = c("0", "1"))
head.L = apply(data$HEADLEN, FUN = summary)
data=read.csv("C:\\Users\\ASUS\\Downloads\\bears.csv", sep = ";", header = FALSE)
#summary data
head.L = apply(data$HEADLEN, FUN = summary)
#summary data
head.L = apply(data$HEADLEN, summary)
summary(data[, c("Head.L", "Head.W", "Neck.G", "Chest.G", "Weight")])
head(data)
data=read.csv("C:\\Users\\ASUS\\Downloads\\bears.csv", sep = ";", header = TRUE)
summary(data[, c("HEADLEN", "HEADWTH", "NECK", "CHEST", "Weight")])
#summary data
summary(data[, c("HEADLEN", "HEADWTH", "NECK", "CHEST", "WEIGHT")])
install.packages(pairs)
install.packages("pairs")
pairs(data[, c("HEADLEN", "HEADWTH", "NECK", "CHEST", "WEIGHT")])
library(ggplot2)
ggplot(data, aes(x = HEADLEN)) +
geom_histogram() +
labs(title = "Distribusi Panjang Kepala", x = "Panjang Kepala (cm)", y = "Frekuensi")
# Scatter plot untuk melihat hubungan antara HEADLEN dan WEIGHT
ggplot(data, aes(x = HEADLEN, y = WEIGHT)) +
geom_point() +
labs(title = "Hubungan antara Panjang Kepala dan Berat Badan",
x = "Panjang Kepala (cm)", y = "Berat Badan (kg)")
library(pairs)
library(pairs)
version()
version
update()
install.packages("installr")
library(installr)
updateR()
data=read.csv("C:\\Users\\ASUS\\Downloads\\bears.csv", sep = ";", header = TRUE)
datanya<-cbind.data.frame(data)
print(data)
data=read.csv("C:\\Users\\ASUS\\Downloads\\bears.csv", sep = ";", header = TRUE)
datanya<-cbind.data.frame(data)
print(datanya)
summary(data[, c("HEADLEN", "HEADWTH", "NECK", "CHEST", "WEIGHT")])
summary(data[, c("HEADLEN", "HEADWTH", "NECK", "CHEST", "WEIGHT")])
head(data)
library(dplyr)
# Menghitung statistik untuk Height berdasarkan Gender
result_height <- data %>%
group_by(Gender) %>%
summarize(
mean_height = mean(Hgt),
median_height = median(Hgt),
variance_height = var(Hgt),
Q1_height = quantile(Hgt, 0.25),
Q3_height = quantile(Hgt, 0.25),
cv_height = sd(Hgt) / mean(Hgt)
)
data=read.csv("D:\\Pulse.csv",header=TRUE)
library(dplyr)
# Menghitung statistik untuk Height berdasarkan Gender
result_height <- data %>%
group_by(Gender) %>%
summarize(
mean_height = mean(Hgt),
median_height = median(Hgt),
variance_height = var(Hgt),
Q1_height = quantile(Hgt, 0.25),
Q3_height = quantile(Hgt, 0.25),
cv_height = sd(Hgt) / mean(Hgt)
)
print(result_height)
# Histogram untuk Height dan Gender
ggplot(data, aes(x = Hgt, fill = as.factor(Gender))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Tinggi Badan Berdasarkan Gender",
x = "Tinggi Badan (cm)",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"), labels = c("0", "1"))
library(ggplot2)
ggplot(data, aes(x = Rest, fill = as.factor(Exercise))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Active berdasarkan Exercise",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("red","yellow", "green"),
labels = c("1", "2","3"))
data=read.csv("C:\Users\ASUS\Downloads\bears2.csv", sep = ";", header = TRUE)
data=read.csv("C:\\Users\\ASUS\\Downloads\\bears2.csv", sep = ";", header = TRUE)
datanya<-cbind.data.frame(data)
print(data)
summary(data[, c("Head.L", "Head.W", "Neck.G", "Chest.G", "Weight")])
summary(data[, c("Head.L", "Head.W", "Neck.G", "Chest.G", "Weight")])
summary(data_bears[, c("Head.L", "Head.W", "Neck.G", "Chest.G", "Weight")])
data_bears=read.csv("C:\\Users\\ASUS\\Downloads\\bears2.csv", sep = ";", header = TRUE)
summary(data_bears[, c("Head.L", "Head.W", "Neck.G", "Chest.G", "Weight")])
#Memanggil
data_bears=read.csv("C:\\Users\\ASUS\\Downloads\\bears2.csv", sep = ";", header = TRUE)
datanya<-cbind.data.frame(data)
print(data)
#summary data
summary(data_bears[, c("Head.L", "Head.W", "Neck.G", "Chest.G", "Weight")])
summary(data_bears[, c("Head.L", "Head.W", "Neck.G", "Chest.G", "Weight")])
summary(data_bears[, c("Head.L", "Head.W", "Neck.G", "Chest.G", "Weight")])
summary(data[, c("Head.L", "Head.W", "Neck.G", "Chest.G", "Weight")])
summary(data[, c("Head.L", "Head.W", "Neck.G", "Chest.G", "Weight")])
data_bears=read.csv("C:\\Users\\ASUS\\Downloads\\bears2.csv"
data_bears=read.csv("C:\\Users\\ASUS\\Downloads\\bears2.csv")
data_bears=read.csv("C:\\Users\\ASUS\\Downloads\\bears2.csv")
print(data_bears)
summary(data_bears[, c("Head.L", "Head.W", "Neck.G", "Chest.G", "Weight")])
#matriks plot
pairs(data_bears[, c("Head.L", "Head.W", "Neck.G", "Chest.G", "Weight")],
main = "Matrix Plot Bears",
col = "blue")
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
data=read.csv("D:\\Pulse.csv",header=TRUE)
datanya<-cbind.data.frame(data)
print(datanya)
#1a
#data gender
height = by(data$Hgt, data$Gender, summary)
weight = by(data$Wgt, data$Gender, summary)
#data active
active_smoke = by(data$Active, data$Smoke, summary)
active_gender = by(data$Active, data$Gender, summary)
active_exercise = by(data$Active, data$Exercise, summary)
#data rest
rest_smoke    = by(data$Rest, data$Smoke, summary)
rest_gender   = by(data$Rest, data$Gender, summary)
rest_exercise = by(data$Rest, data$Exercise, summary)
print(height)
print(weight)
print(active_smoke)
print(active_gender)
print(active_exercise)
print(rest_smoke)
print(rest_gender)
print(rest_exercise)
#1b
boxplot(Hgt ~ Gender, data = data, main = "Distribusi Tinggi Badan Berdasarkan Gender")
boxplot(Wgt ~ Gender, data = data, main = "Distribusi Berat Badan Berdasarkan Gender")
boxplot(Active ~ Smoke, data = data, main = "Boxplot berdasarkan Active dan Smoke")
boxplot(Active ~ Gender, data = data, main = "Boxplot berdasarkan Active dan Gender")
boxplot(Active ~ Exercise, data = data, main = "Boxplot berdasarkan Active dan Exercise")
boxplot(Rest ~ Smoke, data = data, main = "Boxplot berdasarkan Rest dan Smoke")
boxplot(Rest ~ Gender, data = data, main = "Boxplot berdasarkan Rest dan Gender")
boxplot(Rest ~ Exercise, data = data, main = "Boxplot berdasarkan Rest dan Exercise")
#1c
library(dplyr)
# Menghitung statistik untuk Height berdasarkan Gender
result_height <- data %>%
group_by(Gender) %>%
summarize(
mean_height = mean(Hgt),
median_height = median(Hgt),
variance_height = var(Hgt),
Q1_height = quantile(Hgt, 0.25),
Q3_height = quantile(Hgt, 0.25),
cv_height = sd(Hgt) / mean(Hgt)
)
print(result_height)
# Menghitung statistik untuk Weight berdasarkan Gender
result_weight <- data %>%
group_by(Gender) %>%
summarize(
mean_weight = mean(Wgt),
median_weight = median(Wgt),
variance_weight = var(Wgt),
Q1_weight = quantile(Wgt, 0.25),
Q3_weight = quantile(Wgt, 0.25),
cv_weight = sd(Wgt) / mean(Wgt)
)
print(result_weight)
# Menghitung statistik untuk Active
result_active <- data %>%
group_by(Smoke, Gender, Exercise) %>%
summarize(
mean_active = mean(Active),
median_active = median(Active),
variance_active = var(Active),
Q1_active = quantile(Active, 0.25),
Q3_active = quantile(Active, 0.75),
cv_active = sd(Active) / mean(Active)
)
print(result_active)
# Menghitung statistik untuk Rest
result_rest <- data %>%
group_by(Smoke, Gender, Exercise) %>%
summarize(
mean_rest = mean(Rest),
median_rest = median(Rest),
variance_rest = var(Rest),
Q1_rest = quantile(Rest, 0.25),
Q3_rest = quantile(Rest, 0.75),
cv_rest = sd(Rest) / mean(Rest)
)
print(result_rest)
# Menampilkan hasil
#1d
library(ggplot2)
# Histogram untuk Active dan Smoke
ggplot(data, aes(x = Active, fill = as.factor(Smoke))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Active berdasarkan Smoke",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"), labels = c("0", "1"))
# Histogram untuk Active dan Gender
ggplot(data, aes(x = Active, fill = as.factor(Gender))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Active berdasarkan Gender",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"),
labels = c("0", "1"))
# Histogram untuk Active dan Exercise
ggplot(data, aes(x = Rest, fill = as.factor(Exercise))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Active berdasarkan Exercise",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("red","yellow", "green"),
labels = c("1", "2","3"))
# Histogram untuk Rest dan Exercise
ggplot(data, aes(x = Rest, fill = as.factor(Exercise))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Rest berdasarkan Exercise",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("red","yellow", "green"),
labels = c("1", "2","3"))
# Histogram untuk Rest dan Gender
ggplot(data, aes(x = Rest, fill = as.factor(Gender))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Rest berdasarkan Gender",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"), labels = c("0", "1"))
# Histogram untuk Rest dan Smoke
ggplot(data, aes(x = Rest, fill = as.factor(Smoke))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Rest berdasarkan Smoke",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"), labels = c("0", "1"))
# Histogram untuk Height dan Gender
ggplot(data, aes(x = Hgt, fill = as.factor(Gender))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Tinggi Badan Berdasarkan Gender",
x = "Tinggi Badan (cm)",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"), labels = c("0", "1"))
# Histogram untuk Weight dan Gender
ggplot(data, aes(x = Wgt, fill = as.factor(Gender))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Berat Badan Berdasarkan Gender",
x = "Berat Badan",
y = "Frekuensi") +
scale_fill_manual(values = c("yellow", "green"),
labels = c("0", "1"))
knitr::opts_chunk$set(echo = TRUE)
#Memanggil
data_bears=read.csv("C:\\Users\\ASUS\\Downloads\\bears2.csv")
print(data_bears)
#summary data
summary(data_bears[, c("Head.L", "Head.W", "Neck.G", "Chest.G", "Weight")])
#matriks plot
pairs(data_bears[, c("Head.L", "Head.W", "Neck.G", "Chest.G", "Weight")],
main = "Matrix Plot Bears",
col = "blue")
summary(cars)
plot(pressure)
summary(data_bears[, c("Head.L", "Head.W", "Neck.G", "Chest.G", "Weight")])
install.packages("lattice")
#Memanggil
data=read.csv("D:\\Pulse.csv",header=TRUE)
datanya<-cbind.data.frame(data)
print(datanya)
height = by(data$Hgt, data$Gender, summary)
weight = by(data$Wgt, data$Gender, summary)
ggplot(data, aes(x = Rest, fill = as.factor(Exercise))) +
geom_histogram(binwidth = 5) +
labs(title = "Distribusi Active berdasarkan Exercise",
x = "Rest",
y = "Frekuensi") +
scale_fill_manual(values = c("red","yellow", "green"),
labels = c("1", "2","3"))
x <- 1:10
y <- 8:12
y %n% x
library(combinat)
x <- 1:10
y <- 8:12
y %n% x
x <- 1:10
y <- c(3, 3, 7)
all(y %in% x)
isin(x, y)
x <- 1:10 #inisiasi variable x bernilai vektor 1 sampai 10
y <- 8:12 #inisiasi variable x bernilai vektor 8 sampai 12
print(y %n% x)
all(y %in% x)
x <- 1:10 #inisiasi variable x bernilai vektor 1 sampai 10
y <- c(3, 3, 7)
all(y %in% x)
x <- 1:10 #inisiasi variable x bernilai vektor 1 sampai 10
y <- 8:12 #inisiasi variable x bernilai vektor 8 sampai 12
all(y %n% x)
x <- 1:10 #inisiasi variable x bernilai vektor 1 sampai 10
y <- 8:12 #inisiasi variable x bernilai vektor 8 sampai 12
cek <- y %n% x
x <- 1:10
y <- 8:12
hasil <- y %in% x
print(hasil)
x <- 1:10 #variable x berisi vektor bilangan 1 sampai 10
y <- 8:12 #variable y berisi vektor bilangan 8 sampai 12
cek <- y %in% x
print(cek)
x <- 1:10 #inisiasi variable x bernilai vektor 1 sampai 10
y <- c(3, 3, 7) #variable y berisi vektor bilangan 3, 3, 7
all(y %in% x)
isin(x, y)
#PROBABILITAS
# 3.1
library(prob)
x <- 1:10 #inisiasi variable x bernilai vektor 1 sampai 10
y <- c(3, 3, 7) #variable y berisi vektor bilangan 3, 3, 7
all(y %in% x) #apakah setiap elemen y adalah di x
isin(x, y)
isin(x, c(3, 4, 5), ordered = TRUE)
isin(x, c(3, 5, 4), ordered = TRUE)
S <- rolldie(4) #inisiasi variable s kocok 4 dadu
subset(S, isin(S, c(2, 2, 6), ordered = TRUE))
S = cards()
A = subset(S, suit == "Heart")
B = subset(S, rank %in% 7:9)
union(A, B)
intersect(A, B)
setdiff(A, B) #tampikan data set dari A tapi tidak di B
intersect(A, B)  #tampikan data set dari A dan B
S <- rolldie(2, makespace = TRUE) # assumes ELM
head(S) # first few rows
A <- subset(S, X1 == X2)
B <- subset(S, X1 + X2 >= 8)
prob(A, given = B)
L <- cards() #var. L berisi data frame kartu poker
M <- urnsamples(L, size = 2) #var. M berisi 2 sample dari L
N <- probspace(M) #var. N berisi ruang sample M
prob(N, all(rank == "A")) #tampilkan probabilitas munculnya kartu AS dari N
L <- rep(c("red", "green"), times = c(7, 3)) #var. L berisi
M <- urnsamples(L, size = 3, replace = FALSE, ordered = TRUE)
N <- probspace(M)
prob(N, isrep(N, "red", 3))
prob(N, isrep(N, "red", 2))
prob(N, isin(N, c("red", "green", "red"), ordered = TRUE))
prob(N, isin(N, c("red", "green", "red")))
S <- tosscoin(10, makespace = TRUE) #var. S berisi data set pelemparan 10 koin dan probabilitasnya
A <- subset(S, isrep(S, vals = "T", nrep = 10)) #var. A berisis subset S yang mendapat hasil T dalam 10 kali lemparan
1 - prob(A) # probabilitas selalu bernilai 0 hingga 1
prob(A) # probabilitas selalu bernilai 0 hingga 1
#3.9 Independensi dan Percobaan Berulang
iidspace(c("H","T"), ntrials = 3, probs = c(0.7, 0.3))
source("~/Tugas/Semester 1/Statistika/praktikum 3 Probabilitas.R")
source("~/Tugas/Semester 1/Statistika/praktikum 3 Probabilitas.R")
shiny::runApp('C:/Users/ASUS/OneDrive/Belajar Ngoding/Belajar R/distribusi.geometri')
runApp('C:/Users/ASUS/OneDrive/Belajar Ngoding/Belajar R/distribusi.geometri')
